<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=<%= ENV.fetch("GMAPS_KEY") %>&libraries=places&callback=initMap"></script>

<%= form_with(model: order, multipart: true) do |form| %>
  <% if order.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(order.errors.count, "error") %> prohibited this order from being saved:</h2>

      <ul>
        <% order.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= form.hidden_field :company_id, value: current_user.company_id %>

  <%= form.hidden_field :branch_id, value: current_user.branch_id %>

  <div>
    <%= form.label :expected_delivery, style: "display: block" %>
    <%= form.date_field :expected_delivery, required: true %>
  </div>

  <div>
    <%= form.label :status, style: "display: block" %>
    <%= form.select :status, ['Processing', 'In Transit', 'Delivered'], required: true %>
  </div>

  <div>
    <%= form.label :sending_address, style: "display: block" %>
    <% if order.new_record? %>
      <%= form.collection_select :sending_address, StorageLocation.all, :address, :address %>
    <% else %>
      <%= form.text_field :sending_address, required: true %>
    <% end %>
  </div>

  <div>
    <%= form.label :receiving_address, style: "display: block" %>
    <%= form.text_field :receiving_address, id: "receiving_address", class: "google-places-autocomplete", placeholder: "Enter an address", style: "width: 350px;", required: true %>
  </div>

  <div>
    <%= form.label :description, style: "display: block" %>
    <%= form.text_field :description, required: true %>
  </div>
  <p>
    <script>
      $(document).ready(function() {
        var isNewOrder = <%= order.new_record? ? 'true' : 'false' %>;
        var orderId = <%= order.new_record? ? 'null' : order.id %>;

        $('#new-order-products-table').DataTable({
          processing: true,
          serverSide: true,
          ajax: {
            url: '<%= new_order_path(format: :json) %>',
            type: 'GET',
                data: {
      isNewOrder: isNewOrder,
      orderId: orderId
          }
          },
       columns: [
            {
              data: null,
              render: function(data, type, row, meta) {
                // Render checkbox for each product
                return `<input type="checkbox" name="order[order_products_attributes][${meta.row}][product_id]" value="${row.id}" class="product-checkbox">`;
              },
              orderable: false
            },
            { data: 'id' },
            { data: 'name' },
            { data: 'sku' },
            { data: 'price' },
            { data: 'stock_quantity' },
            { data: 'supplier' },
            {
              data: 'quantity_ordered',
              render: function(data, type, row, meta) {
                return `<input type="number" name="order[order_products_attributes][${meta.row}][quantity_ordered]" value="${data}">`;
              }
            },
            {
              data: 'shipping_cost',
              render: function(data, type, row, meta) {
                return `<input type="number" name="order[order_products_attributes][${meta.row}][shipping_cost]" value="${data}">`;
              }
            },
            {
              data: 'transaction_type',
              render: function(data, type, row, meta) {
                return `<select name="order[order_products_attributes][${meta.row}][transaction_type]">
                          <option value="sale_to_customer">Sale to customer</option>
                          <option value="purchase_from_supplier">Purchase from supplier</option>
                          <option value="refund_to_customer">Refund to customer</option>
                          <option value="return_to_supplier">Return to supplier</option>
                          <option value="stock_loss">Stock loss</option>
                        </select>`;
              }
            },
            {
              data: null,
              defaultContent: '',
              orderable: false
              // Add any action buttons if necessary
            }
          ],
          drawCallback: function(settings) {
            // This will run every time the table is drawn/re-drawn
            // Here we can disable the inputs
            $('input[name$="[quantity_ordered]"], input[name$="[shipping_cost]"], select[name$="[transaction_type]"]').prop('disabled', true);
          }
        });

        // Handle remove product click with delegated event handling
        $('#new-order-products-table').on('click', '.remove-product', function() {
          var row = $(this).closest('tr');
          var productId = row.find('input[name$="[product_id]"]').val();
          table.row(row).remove().draw(false);
          // Disable inputs for removed product (if needed)
        });

        // Handle checkbox change with delegated event handling
        $('#new-order-products-table').on('change', 'input[type="checkbox"]', function() {
          var checkbox = $(this);
          var fields = checkbox.closest('tr').find('input[name$="[quantity_ordered]"], input[name$="[shipping_cost]"], select[name$="[transaction_type]"]');
          fields.prop('disabled', !checkbox.prop('checked'));
        });
      });
    </script>

    <div class="card shadow mb-4">
      <div class="card-header py-3">
        <div class="d-flex justify-content-between align-items-center">
          <h6 class="m-0 font-weight-regular text-black">Products</h6>
        </div>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table datatable-bordered" id="new-order-products-table" width="100%" cellspacing="0">
            <thead class="datatable-header">
              <tr>
                <th></th>
                <th>ID</th>
                <th>Name</th>
                <th>SKU</th>
                <th>Price</th>
                <th>Stock Quantity</th>
                <th>Supplier</th>
                <th>Quantity Ordered</th>
                <th>Shipping Cost</th>
                <th>Transaction Type</th>
                <th>Actions</th>
              </tr>
            </thead>
          </table>
        </div>
      </div>
    </div>

    <div>
      <%= form.submit %>
    </div>

  <% end %>
